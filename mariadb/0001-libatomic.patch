From 1b17400c33fa153847c9dea750b25fbe06c70501 Mon Sep 17 00:00:00 2001
From: Kevin Mihelich <kevin@archlinuxarm.org>
Date: Fri, 2 Aug 2019 12:00:41 -0600
Subject: [PATCH] libatomic

---
 configure.cmake                     | 3 +++
 libmysqld/CMakeLists.txt            | 1 +
 sql/CMakeLists.txt                  | 3 ++-
 storage/rocksdb/build_rocksdb.cmake | 2 +-
 4 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/configure.cmake b/configure.cmake
index 6b8bbed636e..278c930260b 100644
--- a/configure.cmake
+++ b/configure.cmake
@@ -859,6 +859,8 @@ SET(SIGNAL_WITH_VIO_CLOSE 1)
 MARK_AS_ADVANCED(NO_ALARM)
 
 
+SET(SAVE_CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES})
+SET(CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES} atomic)
 CHECK_CXX_SOURCE_COMPILES("
 int main()
 {
@@ -867,6 +869,7 @@ int main()
   return (int)__atomic_load_n(ptr, __ATOMIC_SEQ_CST);
 }"
 HAVE_GCC_C11_ATOMICS)
+SET(CMAKE_REQUIRED_LIBRARIES ${SAVE_CMAKE_REQUIRED_LIBRARIES})
 
 IF(WITH_VALGRIND)
   SET(HAVE_valgrind 1)
diff --git a/libmysqld/CMakeLists.txt b/libmysqld/CMakeLists.txt
index 72e70ca0725..3722dce6325 100644
--- a/libmysqld/CMakeLists.txt
+++ b/libmysqld/CMakeLists.txt
@@ -154,6 +154,7 @@ SET(LIBS
   ${LIBWRAP} ${LIBCRYPT} ${LIBDL}
   ${MYSQLD_STATIC_PLUGIN_LIBS}
   sql_embedded
+  atomic
 )
 
 # Some storage engine were compiled for embedded specifically
diff --git a/sql/CMakeLists.txt b/sql/CMakeLists.txt
index 90a6a32756c..9c41e9ee0bb 100644
--- a/sql/CMakeLists.txt
+++ b/sql/CMakeLists.txt
@@ -181,7 +181,8 @@ TARGET_LINK_LIBRARIES(sql ${MYSQLD_STATIC_PLUGIN_LIBS}
   ${LIBWRAP} ${LIBCRYPT} ${LIBDL} ${CMAKE_THREAD_LIBS_INIT}
   ${WSREP_LIB}
   ${SSL_LIBRARIES}
-  ${LIBSYSTEMD})
+  ${LIBSYSTEMD}
+  atomic)
 
 IF(WIN32)
   SET(MYSQLD_SOURCE main.cc nt_servc.cc message.rc)
diff --git a/storage/rocksdb/build_rocksdb.cmake b/storage/rocksdb/build_rocksdb.cmake
index 96da9737dbc..f80385882bb 100644
--- a/storage/rocksdb/build_rocksdb.cmake
+++ b/storage/rocksdb/build_rocksdb.cmake
@@ -469,7 +469,7 @@ INCLUDE_DIRECTORIES(${ROCKSDB_SOURCE_DIR}/util)
 list(APPEND SOURCES ${CMAKE_CURRENT_BINARY_DIR}/build_version.cc)
 
 ADD_CONVENIENCE_LIBRARY(rocksdblib ${SOURCES})
-target_link_libraries(rocksdblib ${THIRDPARTY_LIBS} ${SYSTEM_LIBS})
+target_link_libraries(rocksdblib ${THIRDPARTY_LIBS} ${SYSTEM_LIBS} atomic)
 IF(CMAKE_CXX_COMPILER_ID MATCHES "GNU" OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
   set_target_properties(rocksdblib PROPERTIES COMPILE_FLAGS "-fPIC -fno-builtin-memcmp")
 endif()
-- 
2.22.0

