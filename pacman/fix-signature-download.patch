--- pacman-6.0.2/lib/libalpm/dload.c.orig	2024-01-20 08:55:13
+++ pacman-6.0.2/lib/libalpm/dload.c	2024-01-20 08:59:51
@@ -964,6 +964,22 @@
 
 			if(payload->fileurl) {
 				ret = handle->fetchcb(handle->fetchcb_ctx, payload->fileurl, localpath, payload->force);
+				if (ret != -1 && payload->download_signature) {
+					/* Download signature if requested */
+					char *sig_fileurl;
+					size_t sig_len = strlen(payload->fileurl) + 5;
+					int retsig = -1;
+
+					MALLOC(sig_fileurl, sig_len, RET_ERR(handle, ALPM_ERR_MEMORY, -1));
+					snprintf(sig_fileurl, sig_len, "%s.sig", payload->fileurl);
+
+					retsig = handle->fetchcb(handle->fetchcb_ctx, sig_fileurl, localpath, payload->force);
+					free(sig_fileurl);
+
+					if(!payload->signature_optional) {
+						ret = retsig;
+					}
+				}
 			} else {
 				for(s = payload->servers; s && ret == -1; s = s->next) {
 					const char *server = s->data;
@@ -975,6 +991,22 @@
 
 					ret = handle->fetchcb(handle->fetchcb_ctx, fileurl, localpath, payload->force);
 					free(fileurl);
+
+					if (ret != -1 && payload->download_signature) {
+						/* Download signature if requested */
+						int retsig = -1;
+
+						len = len + 5;
+						MALLOC(fileurl, len, RET_ERR(handle, ALPM_ERR_MEMORY, -1));
+						snprintf(fileurl, len, "%s.sig", payload->fileurl);
+
+						retsig = handle->fetchcb(handle->fetchcb_ctx, fileurl, localpath, payload->force);
+						free(fileurl);
+
+						if(!payload->signature_optional) {
+							ret = retsig;
+						}
+					}
 				}
 			}
 
